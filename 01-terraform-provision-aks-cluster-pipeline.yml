trigger:
- master

pool:
  name: default

stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:
        - script: |
            sudo apt-get update
            sudo apt-get install -y unzip
          displayName: "Install unzip"
        - script: |
            echo "checking contents of terraform-manifests directory"
            ls -al $(System.DefaultWorkingDirectory)/terraform-manifests
          displayName: "Check Directory Contents for debugging"
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifacts
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            artifact: 'terraform-manifests-out'
            publishLocation: 'pipeline'
        - task: TerraformInstaller@1
          displayName: Terraform install
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: Terraform init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            backendServiceArm: 'terraform-aks-azurerm-svc-con'
            backendAzureRmResourceGroupName: 'myRG'
            backendAzureRmStorageAccountName: 'mytfstorage1233'
            backendAzureRmContainerName: 'devtfstate'
            backendAzureRmKey: 'dev.terraform.tfstate'
        - task: TerraformTaskV4@4
          displayName: Terraform Validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
